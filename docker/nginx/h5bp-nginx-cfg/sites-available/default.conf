# Upstream server for Docker publicly exposed container and Docker host
# upstream docker_host {
#   server 192.168.1.50;
# }

# Upstream server for the front
# upstream front {
#   # front is included in each dynamic /etc/hosts by Docker
#   server front;
# }

# # Upstream server for the web application server
# upstream server {
#   # server is included in each dynamic /etc/hosts by Docker
#   server server;
# }

# Error pages redirections
error_page 404 /404.html;
error_page 500 502 503 504  /50x.html;

# HTTP server
server {
  # Server name
  server_name  192.168.1.50;
  # Protocols
  listen [::]:80 ipv6only=on;
  listen 80;

  location / {
    charset utf-8;
    root /www;
    include h5bp/basic.conf;
    try_files $uri @https_redirect;
    if ($uri != '/') { expires 30d; }
  }

  # Redirect non-SSL to SSL
  location @https_redirect {
    rewrite  ^ https://$server_name$request_uri? permanent;
  }
}

# Upgrade proxy web-socket connections
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

# HTTPS server
server {
  # Server name
  server_name  192.168.1.50;
  # Protocols
  listen [::]:443 ipv6only=on ssl spdy;
  listen 443 ssl spdy;
  # SSL configuration
  ssl on;
  ssl_certificate /etc/certs/server.cert;
  ssl_certificate_key /etc/certs/server.key;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;
  ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DES-CBC3-SHA:!ADH:!AECDH:!MD5;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;
  ssl_stapling on;
  ssl_stapling_verify on;
  add_header Strict-Transport-Security "max-age=63072000";
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;
  # DNS resolution on Google's DNS
  resolver 8.8.8.8 8.8.4.4;
  # SPDY configuration
  add_header Alternate-Protocol  443:npn-spdy/3;
  # Adjust connection keepalive for SPDY clients:
  spdy_keepalive_timeout 300; # up from 180 secs default
  # enable SPDY header compression
  spdy_headers_comp 9;

  # location ~* \.(?:css|js)$ {
  #   # access_log off;
  #   try_files $uri @backend;
  #   # expires 1y;
  #   # add_header Cache-Control "public";
  # }

  # # WebFonts
  # If you are NOT using cross-domain-fonts.conf, uncomment the following directive
  # location ~* \.(?:ttf|ttc|otf|eot|woff|woff2)$ {
  #   # access_log off;
  #   try_files $uri @backend;
  #   # add_header Cache-Control "public";
  #   # expires 1M;
  # }

  location / {
    charset utf-8;
    root /wwws;
    include h5bp/basic.conf;
    try_files $uri @proxy_node;
  }

  location @proxy_node {
    root /;
    proxy_headers_hash_max_size 1024;
    proxy_headers_hash_bucket_size 128;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade; # allow websockets
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header X-Forward-Proto http;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forward-Proto http;
    proxy_set_header X-Nginx-Proxy true;
    proxy_cache one;
    proxy_cache_key prj$request_uri$scheme;
    proxy_cache_bypass $http_upgrade;
    proxy_pass http://server:3000;
    if ($uri != '/') { expires 30d; }
  }
}
