# Upgrade proxy web-socket connections
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

# server {
#   listen       80;
#   server_name  front;
#
#   # location ~* \.(?:css|js)$ {
#   #   # access_log off;
#   #   try_files $uri @backend;
#   #   # expires 1y;
#   #   # add_header Cache-Control "public";
#   # }
#
#   # # WebFonts
#   # If you are NOT using cross-domain-fonts.conf, uncomment the following directive
#   # location ~* \.(?:ttf|ttc|otf|eot|woff|woff2)$ {
#   #   # access_log off;
#   #   try_files $uri @backend;
#   #   # add_header Cache-Control "public";
#   #   # expires 1M;
#   # }
#
#   location / {
#     charset utf-8;
#     root /www;
#     include h5bp/basic.conf;
#     # if ($uri != '/') { expires 30d; }
#     try_files $uri @backend;
#   }
#
#   location @backend {
#     root /;
#     proxy_headers_hash_max_size 1024;
#     proxy_headers_hash_bucket_size 128;
#     proxy_redirect off;
#     proxy_http_version 1.1;
#     proxy_set_header Upgrade $http_upgrade; # allow websockets
#     proxy_set_header Connection $connection_upgrade;
#     proxy_set_header X-Forward-Proto http;
#     proxy_set_header Host $http_host;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forward-Proto http;
#     proxy_set_header X-Nginx-Proxy true;
#     proxy_cache one;
#     proxy_cache_key prj$request_uri$scheme;
#     proxy_cache_bypass $http_upgrade;
#     proxy_pass http://server:3000;
#   }
#
#   #error_page  404              /404.html;
#   # redirect server error pages to the static page /50x.html
#   error_page   500 502 503 504  /50x.html;
#   location = /50x.html {
#     root /usr/share/nginx/html;
#   }
# }

server {
  listen       443 ssl spdy;
  server_name  front;

  ssl on;
  ssl_certificate /etc/certs/server.cert;
  ssl_certificate_key /etc/certs/server.key;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;
  ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DES-CBC3-SHA:!ADH:!AECDH:!MD5;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;
  add_header Strict-Transport-Security "max-age=63072000";
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;
  ssl_stapling on;
  ssl_stapling_verify on;
  resolver 8.8.8.8 8.8.4.4;

  # location ~* \.(?:css|js)$ {
  #   # access_log off;
  #   try_files $uri @backend;
  #   # expires 1y;
  #   # add_header Cache-Control "public";
  # }

  # # WebFonts
  # If you are NOT using cross-domain-fonts.conf, uncomment the following directive
  # location ~* \.(?:ttf|ttc|otf|eot|woff|woff2)$ {
  #   # access_log off;
  #   try_files $uri @backend;
  #   # add_header Cache-Control "public";
  #   # expires 1M;
  # }

  location / {
  #   charset utf-8;
  #   root /www;
  #   include h5bp/basic.conf;
  #   # if ($uri != '/') { expires 30d; }
  #   try_files $uri @backend;
  # }
  #
  # location @backend {
  #   root /;
    proxy_headers_hash_max_size 1024;
    proxy_headers_hash_bucket_size 128;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade; # allow websockets
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header X-Forward-Proto http;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forward-Proto http;
    proxy_set_header X-Nginx-Proxy true;
    proxy_cache one;
    proxy_cache_key prj$request_uri$scheme;
    proxy_cache_bypass $http_upgrade;
    proxy_pass http://server:3000;
  }

  #error_page  404              /404.html;
  # redirect server error pages to the static page /50x.html
  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
    root /usr/share/nginx/html;
  }
}
